{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\f7404\\\\Desktop\\\\react-store\\\\src\\\\components\\\\CartItem.js\";\nimport React, { useState, useMemo } from 'react';\nimport axios from 'commons/axios';\nimport { formatPrice } from 'commons/helper'; // 佈局架構: X按鈕 + 商品圖片 + 商品名稱 + 單價 + 商品數量 + 此商品總價(單價*數量)\n\nconst CartItem = props => {\n  const [mount, setMount] = useState(props.cart.mount);\n  const {\n    id,\n    name,\n    image,\n    price\n  } = props.cart || {}; // useMemo: 傳遞一個「建立」function 及依賴 array。\n  // useMemo 只會在依賴(mount 與 price)改變時才重新計算 memoized 的值。\n\n  const sumPrice = useMemo(() => {\n    return formatPrice(mount * parseInt(price));\n  }, [mount, price]);\n\n  const handleChange = e => {\n    const _mount = parseInt(e.target.value);\n\n    setMount(_mount); // gen 一筆寫回 REST 的 cart[] 資料\n\n    const newCart = { ...props.cart,\n      mount: _mount\n    };\n    axios.put(`/carts/${id}`, newCart).then(res => {\n      props.updateCart(newCart);\n    });\n  }; // 刪除 REST API 的資料後, 在透過父組件的 props.deleteCart() 修改其 state\n\n\n  const deleteCart = () => {\n    axios.delete(`/carts/${id}`).then(res => {\n      props.deleteCart(props.cart); // 傳進來的 props.cart 即是現在要刪除的這筆商品\n    });\n  };\n\n  return (// Bulma => is-vcentered: 垂直置中, is-narrow: 緊湊表格\n    React.createElement(\"div\", {\n      className: \"columns is-vcentered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column is-narrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"close\",\n      onClick: deleteCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"X\")), React.createElement(\"div\", {\n      className: \"column is-narrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: image,\n      alt: name,\n      width: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column cart-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, name), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" \", formatPrice(price))), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      className: \"input num-input\",\n      min: 1,\n      value: mount,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"sum-price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, sumPrice)))\n  );\n};\n\nexport default CartItem;","map":{"version":3,"sources":["C:/Users/f7404/Desktop/react-store/src/components/CartItem.js"],"names":["React","useState","useMemo","axios","formatPrice","CartItem","props","mount","setMount","cart","id","name","image","price","sumPrice","parseInt","handleChange","e","_mount","target","value","newCart","put","then","res","updateCart","deleteCart","delete"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from 'react'\r\nimport axios from 'commons/axios'\r\nimport { formatPrice } from 'commons/helper'\r\n\r\n// 佈局架構: X按鈕 + 商品圖片 + 商品名稱 + 單價 + 商品數量 + 此商品總價(單價*數量)\r\nconst CartItem = props => {\r\n    const [mount, setMount] = useState(props.cart.mount);\r\n    const { id, name, image, price } = props.cart || {};\r\n\r\n    // useMemo: 傳遞一個「建立」function 及依賴 array。\r\n    // useMemo 只會在依賴(mount 與 price)改變時才重新計算 memoized 的值。\r\n    const sumPrice = useMemo(() => {\r\n        return formatPrice(mount * parseInt(price))\r\n    }, [mount, price]);\r\n\r\n    const handleChange = e => {\r\n        const _mount = parseInt(e.target.value);\r\n        setMount(_mount);\r\n\r\n        // gen 一筆寫回 REST 的 cart[] 資料\r\n        const newCart = {\r\n            ...props.cart,\r\n            mount: _mount\r\n        };\r\n        axios.put(`/carts/${id}`, newCart).then(res => {\r\n            props.updateCart(newCart);\r\n        });\r\n    };\r\n\r\n    // 刪除 REST API 的資料後, 在透過父組件的 props.deleteCart() 修改其 state\r\n    const deleteCart = () => {\r\n        axios.delete(`/carts/${id}`).then(res=>{\r\n            props.deleteCart(props.cart) // 傳進來的 props.cart 即是現在要刪除的這筆商品\r\n        });\r\n    };\r\n\r\n    return (\r\n        // Bulma => is-vcentered: 垂直置中, is-narrow: 緊湊表格\r\n        <div className=\"columns is-vcentered\">\r\n            <div className=\"column is-narrow\">\r\n                <span className=\"close\" onClick={deleteCart}>X</span>\r\n            </div>\r\n            <div className=\"column is-narrow\">\r\n                <img src={image} alt={name} width=\"100\" />\r\n            </div>\r\n            <div className=\"column cart-name\">\r\n                {name}\r\n            </div>\r\n            <div className=\"column\">\r\n                <span className=\"price\"> {formatPrice(price)}</span>\r\n            </div>\r\n            <div className=\"column\">\r\n                <input \r\n                    type=\"number\" \r\n                    className=\"input num-input\"\r\n                    min={1} \r\n                    value={mount} \r\n                    onChange={handleChange}\r\n                />\r\n            </div>\r\n            <div className=\"column\">\r\n                <span className=\"sum-price\">{sumPrice}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem;"]},"metadata":{},"sourceType":"module"}