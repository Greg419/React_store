{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\f7404\\\\Desktop\\\\react-store\\\\src\\\\components\\\\ToolBox.js\";\nimport React from 'react'; // import { Link } from 'react-router-dom'\n\nimport { withRouter } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nclass ToolBox extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchText: ''\n    };\n\n    this.handleChange = e => {\n      const value = e.target.value;\n      this.setState({\n        searchText: value\n      }); // 將 user 輸入的搜尋值 pass 上去給 <Products/>\n\n      this.props.search(value); // ps. search() 是父層 <Products/> 的函式, 傳進來目的就是要抓這裡的 e.target.value\n      // 以便 <Products/> 針對 user 的輸入,  對 products[] 做搜尋條件篩選\n    };\n\n    this.clearSearchText = e => {\n      this.setState({\n        searchText: ''\n      });\n      this.props.search(e.target.value);\n    };\n\n    this.goCart = () => {\n      if (!global.auth.isLogin()) {\n        this.props.history.push('/login');\n        toast.info('Please Login First');\n        return;\n      }\n\n      this.props.history.push('/cart');\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"tool-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Store\"), React.createElement(\"div\", {\n      className: \"search-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field has-addons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input search-input\",\n      placeholder: \"Search Product Name\",\n      value: this.state.searchText,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.clearSearchText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"X\")))), React.createElement(\"div\", {\n      className: \"cart-box\",\n      onClick: this.goCart,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-shopping-cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"cart-num\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"(\", this.props.cartNum, \")\")));\n  }\n\n} // 未在 Router.js 內被匹配過的組件會沒有 props.history 屬性, 需透過 withRouter 來賦予\n\n\nexport default withRouter(ToolBox);","map":{"version":3,"sources":["C:/Users/f7404/Desktop/react-store/src/components/ToolBox.js"],"names":["React","withRouter","toast","ToolBox","Component","state","searchText","handleChange","e","value","target","setState","props","search","clearSearchText","goCart","global","auth","isLogin","history","push","info","render","cartNum"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAqC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACJC,MAAAA,UAAU,EAAE;AADR,KADyB;;AAAA,SAKjCC,YALiC,GAKlBC,CAAC,IAAI;AAChB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,WAAKE,QAAL,CACI;AAAEL,QAAAA,UAAU,EAAEG;AAAd,OADJ,EAFgB,CAKhB;;AACA,WAAKG,KAAL,CAAWC,MAAX,CAAkBJ,KAAlB,EANgB,CAOhB;AACA;AACH,KAdgC;;AAAA,SAgBjCK,eAhBiC,GAgBfN,CAAC,IAAG;AAClB,WAAKG,QAAL,CACI;AAAEL,QAAAA,UAAU,EAAE;AAAd,OADJ;AAGA,WAAKM,KAAL,CAAWC,MAAX,CAAkBL,CAAC,CAACE,MAAF,CAASD,KAA3B;AACH,KArBgC;;AAAA,SAuBjCM,MAvBiC,GAuBxB,MAAM;AACX,UAAG,CAACC,MAAM,CAACC,IAAP,CAAYC,OAAZ,EAAJ,EAA2B;AACvB,aAAKN,KAAL,CAAWO,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACAlB,QAAAA,KAAK,CAACmB,IAAN,CAAW,oBAAX;AACA;AACH;;AACD,WAAKT,KAAL,CAAWO,OAAX,CAAmBC,IAAnB,CAAwB,OAAxB;AACH,KA9BgC;AAAA;;AAgCjCE,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAGI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,SAAS,EAAC,oBAFd;AAGI,MAAA,WAAW,EAAC,qBAHhB;AAII,MAAA,KAAK,EAAG,KAAKjB,KAAL,CAAWC,UAJvB;AAKI,MAAA,QAAQ,EAAG,KAAKC,YALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAUI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAG,KAAKO,eAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CAVJ,CADJ,CAHJ,EAoBI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,OAAO,EAAE,KAAKC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAG,MAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA6B,KAAKH,KAAL,CAAWW,OAAxC,MAHJ,CApBJ,CADJ;AA4BH;;AA7DgC,C,CAgErC;;;AACA,eAAetB,UAAU,CAACE,OAAD,CAAzB","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { toast } from 'react-toastify';\r\n\r\nclass ToolBox extends React.Component{\r\n    state = {\r\n        searchText: ''\r\n    };\r\n\r\n    handleChange = e => {\r\n        const value = e.target.value\r\n        this.setState(\r\n            { searchText: value }\r\n        );\r\n        // 將 user 輸入的搜尋值 pass 上去給 <Products/>\r\n        this.props.search(value);\r\n        // ps. search() 是父層 <Products/> 的函式, 傳進來目的就是要抓這裡的 e.target.value\r\n        // 以便 <Products/> 針對 user 的輸入,  對 products[] 做搜尋條件篩選\r\n    }\r\n\r\n    clearSearchText = e =>{\r\n        this.setState(\r\n            { searchText: '' }\r\n        );\r\n        this.props.search(e.target.value);\r\n    };\r\n\r\n    goCart = () => {\r\n        if(!global.auth.isLogin()) {\r\n            this.props.history.push('/login');\r\n            toast.info('Please Login First')\r\n            return;\r\n        }\r\n        this.props.history.push('/cart');\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"tool-box\">\r\n                <div className=\"logo-text\">Store</div>\r\n                {/* Search部分 採用 Bulma 中的樣式 */}\r\n                <div className=\"search-box\">\r\n                    <div className=\"field has-addons\">\r\n                        <div className=\"control\">\r\n                            <input \r\n                                type=\"text\" \r\n                                className=\"input search-input\" \r\n                                placeholder=\"Search Product Name\" \r\n                                value={ this.state.searchText }\r\n                                onChange={ this.handleChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"control\">\r\n                            <button className=\"button\" onClick={ this.clearSearchText }>X</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* <Link to=\"/cart\" className=\"cart-box\"> */}\r\n                <div className=\"cart-box\" onClick={this.goCart}>\r\n                    {/* 購物車圖示, 引用 Font Awesome */}\r\n                    <i className=\"fas fa-shopping-cart\"></i>\r\n                    <span className=\"cart-num\">({this.props.cartNum})</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// 未在 Router.js 內被匹配過的組件會沒有 props.history 屬性, 需透過 withRouter 來賦予\r\nexport default withRouter(ToolBox);"]},"metadata":{},"sourceType":"module"}