{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\f7404\\\\Desktop\\\\react-store\\\\src\\\\components\\\\Product.js\";\nimport React from \"react\";\nimport axios from \"commons/axios\";\nimport { withRouter } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { formatPrice } from \"commons/helper\";\nimport Panel from \"components/Panel\";\nimport EditInventory from \"components/EditInventory\"; // import Products from './Products';\n\nclass Product extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.toEdit = () => {\n      Panel.open({\n        component: EditInventory,\n        props: {\n          product: this.props.product,\n          deleteProduct: this.props.delete\n        },\n        productsCallback: data => {\n          if (data) {\n            // 會在 Panel.open() 內 綁定到 Panel的 state.callback\n            this.props.update(data);\n          }\n        }\n      });\n    };\n\n    this.addCart = async () => {\n      const user = global.auth.getUser() || {};\n\n      if (!global.auth.isLogin()) {\n        this.props.history.push(\"/login\");\n        toast.info(\"Please Login First\");\n        return;\n      }\n\n      try {\n        const _this$props$product = this.props.product,\n              id = _this$props$product.id,\n              name = _this$props$product.name,\n              image = _this$props$product.image,\n              price = _this$props$product.price; // 將 carts[] 內每個 elem 的 productId 與此 product id 比對,\n        // 若有回傳表示此 product 為第二筆後的同商品\n\n        const res = await axios.get(`/carts?productId=${id}&&userId=${user.email}`);\n        const carts = res.data; // carts[]已存在同個商品. 則 mount +1\n\n        if (carts && carts.length > 0) {\n          const cart = carts[0];\n          cart.mount += 1;\n          await axios.put(`carts/${cart.id}`, cart); // 根據 cart.id, 將加過 mount 的 cart 資料寫回 carts[]\n        } else {\n          // 否則新添第一筆 product 到 carts[]\n          const cart = {\n            productId: id,\n            name,\n            image,\n            price,\n            mount: 1,\n            userId: user.email\n          };\n          await axios.post(\"/carts\", cart);\n        }\n\n        toast.success(\"Add cart successed!\"); // 狀態提升: 透過父組件 function: updateCartNum(), 修改父組件 <Products/> 的 state.cartNum, 達到同步渲染兄弟組件 <ToolBox/> 的畫面\n\n        this.props.updateCartNum();\n      } catch (error) {\n        toast.error(\"Add cart failed!\");\n      }\n    };\n\n    this.renderManagerBtn = () => {\n      const user = global.auth.getUser() || {};\n\n      if (user.type === 1) {\n        return React.createElement(\"div\", {\n          className: \"p-head has-text-right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"icon edit-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-sliders-h\",\n          onClick: this.toEdit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        })));\n      }\n    };\n  }\n\n  render() {\n    // 獲取上層傳入的產品資訊\n    const _this$props$product2 = this.props.product,\n          name = _this$props$product2.name,\n          image = _this$props$product2.image,\n          tags = _this$props$product2.tags,\n          price = _this$props$product2.price,\n          status = _this$props$product2.status;\n    const _pClass = {\n      available: \"product\",\n      unavailable: \"product out-stock\"\n    };\n    return (// 依 status 決定, 是否加上 \"out-stock\" 的 class 值\n      React.createElement(\"div\", {\n        className: _pClass[status],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.renderManagerBtn(), React.createElement(\"div\", {\n        className: \"img-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"out-stock-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Out of Stock\"), React.createElement(\"figure\", {\n        className: \"image is-4by3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: image,\n        alt: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        className: \"p-tags\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, tags), React.createElement(\"p\", {\n        className: \"p-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, name)), React.createElement(\"div\", {\n        className: \"p-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"price\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, formatPrice(price)), React.createElement(\"button\", {\n        className: \"add-cart\",\n        disabled: status === \"unavailable\",\n        onClick: this.addCart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fas fa-shopping-cart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"i\", {\n        className: \"fas fa-exclamation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))))\n    );\n  }\n\n}\n\nexport default withRouter(Product);","map":{"version":3,"sources":["C:/Users/f7404/Desktop/react-store/src/components/Product.js"],"names":["React","axios","withRouter","toast","formatPrice","Panel","EditInventory","Product","Component","toEdit","open","component","props","product","deleteProduct","delete","productsCallback","data","update","addCart","user","global","auth","getUser","isLogin","history","push","info","id","name","image","price","res","get","email","carts","length","cart","mount","put","productId","userId","post","success","updateCartNum","error","renderManagerBtn","type","render","tags","status","_pClass","available","unavailable"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"commons/axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { formatPrice } from \"commons/helper\";\r\nimport Panel from \"components/Panel\";\r\nimport EditInventory from \"components/EditInventory\";\r\n// import Products from './Products';\r\n\r\nclass Product extends React.Component {\r\n  toEdit = () => {\r\n    Panel.open({\r\n      component: EditInventory,\r\n      props: {\r\n        product: this.props.product,\r\n        deleteProduct: this.props.delete\r\n      },\r\n      productsCallback: data => {\r\n        if (data) {\r\n          // 會在 Panel.open() 內 綁定到 Panel的 state.callback\r\n          this.props.update(data);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  addCart = async () => {\r\n    const user = global.auth.getUser() || {};\r\n    if (!global.auth.isLogin()) {\r\n      this.props.history.push(\"/login\");\r\n      toast.info(\"Please Login First\");\r\n      return;\r\n    }\r\n    try {\r\n      const { id, name, image, price } = this.props.product;\r\n      // 將 carts[] 內每個 elem 的 productId 與此 product id 比對,\r\n      // 若有回傳表示此 product 為第二筆後的同商品\r\n      const res = await axios.get(`/carts?productId=${id}&&userId=${user.email}`);\r\n      const carts = res.data;\r\n      // carts[]已存在同個商品. 則 mount +1\r\n      if (carts && carts.length > 0) {\r\n        const cart = carts[0];\r\n        cart.mount += 1;\r\n        await axios.put(`carts/${cart.id}`, cart); // 根據 cart.id, 將加過 mount 的 cart 資料寫回 carts[]\r\n      } else {\r\n        // 否則新添第一筆 product 到 carts[]\r\n        const cart = {\r\n          productId: id,\r\n          name,\r\n          image,\r\n          price,\r\n          mount: 1,\r\n          userId: user.email\r\n        };\r\n        await axios.post(\"/carts\", cart);\r\n      }\r\n      toast.success(\"Add cart successed!\");\r\n      // 狀態提升: 透過父組件 function: updateCartNum(), 修改父組件 <Products/> 的 state.cartNum, 達到同步渲染兄弟組件 <ToolBox/> 的畫面\r\n      this.props.updateCartNum();\r\n    } catch (error) {\r\n      toast.error(\"Add cart failed!\");\r\n    }\r\n  };\r\n\r\n  renderManagerBtn = () => {\r\n    const user = global.auth.getUser() || {};\r\n    if (user.type === 1) {\r\n      return (\r\n        <div className=\"p-head has-text-right\">\r\n          <span className=\"icon edit-btn\">\r\n            <i className=\"fas fa-sliders-h\" onClick={this.toEdit}></i>\r\n          </span>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // 獲取上層傳入的產品資訊\r\n    const { name, image, tags, price, status } = this.props.product;\r\n\r\n    const _pClass = {\r\n      available: \"product\",\r\n      unavailable: \"product out-stock\"\r\n    };\r\n    return (\r\n      // 依 status 決定, 是否加上 \"out-stock\" 的 class 值\r\n      <div className={_pClass[status]}>\r\n        <div className=\"p-content\">\r\n          {/* 管理者編輯商品 Icon, 登入者為Manager才會被渲染出來 */}\r\n          {this.renderManagerBtn()}\r\n          <div className=\"img-wrapper\">\r\n            {/* out-stock-text 要在 _pClass值為 'product out-stock'時才會被css拉到上層 */}\r\n            <div className=\"out-stock-text\">Out of Stock</div>\r\n            <figure className=\"image is-4by3\">\r\n              <img src={image} alt={name} />\r\n            </figure>\r\n          </div>\r\n          <p className=\"p-tags\">{tags}</p>\r\n          <p className=\"p-name\">{name}</p>\r\n        </div>\r\n        <div className=\"p-footer\">\r\n          <p className=\"price\">{formatPrice(price)}</p>\r\n          <button\r\n            className=\"add-cart\"\r\n            disabled={status === \"unavailable\"}\r\n            onClick={this.addCart}\r\n          >\r\n            <i className=\"fas fa-shopping-cart\"></i>\r\n            <i className=\"fas fa-exclamation\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Product);\r\n"]},"metadata":{},"sourceType":"module"}